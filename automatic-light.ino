#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/5061e8bd-4a03-4eb5-bd2e-be858957bb9d 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLight light;
  CloudTemperatureSensor humidity;
  CloudTemperatureSensor temperature;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <ESP32Servo.h>
#include <DHT.h>

Servo upperServo;   
int upperServoPos = 0;    
int upperServoPin = 27;

Servo lowerServo;   
int lowerServoPos = 0;    
int lowerServoPin = 26;

int tempPin = 33; 
unsigned long previousMillis = 0;
const long interval = 2000; //milliseconds
DHT dht(tempPin, DHT11);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  upperServo.setPeriodHertz(50);    // standard 50 hz servo
  upperServo.attach(upperServoPin, 500, 2400);

  lowerServo.setPeriodHertz(50);    // standard 50 hz servo
  lowerServo.attach(lowerServoPin, 500, 2400);
  
  dht.begin();
  
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  ArduinoCloud.addProperty(temperature, READ, 8 * SECONDS, NULL); //Update temperature value after every 8 seconds

  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void readTemp(){
  unsigned long currentMillis = millis();
  
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    
    float h = dht.readHumidity();
    float t = dht.readTemperature();
    if (isnan(h) || isnan(t)) {
      Serial.println(F("Failed to read from DHT sensor!"));
      return;
    }  
    temperature = t;
    humidity = h;
  }
  
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  readTemp();
}



/*
  Since Light is READ_WRITE variable, onLightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLightChange()  {
  // Add your code here to act upon Light change
  if(light){
    for (upperServoPos = 90; upperServoPos >= 50; upperServoPos -= 1) { //may need to change these values depending on your servo and setup
		// in steps of 1 degree
		upperServo.write(upperServoPos);    
		delay(15);             
	}
	for (upperServoPos = 50; upperServoPos <= 90; upperServoPos += 1) { //may need to change these values depending on your servo and setup
		upperServo.write(upperServoPos);    
		delay(15);             
	}
  }

  else{
    for (lowerServoPos = 80; lowerServoPos >= 30; lowerServoPos -= 1) { //may need to change these values depending on your servo and setup
		// in steps of 1 degree
		lowerServo.write(lowerServoPos);    
		delay(15);             
	}
	for (lowerServoPos = 30; lowerServoPos <= 80; lowerServoPos += 1) { //may need to change these values depending on your servo and setup
		lowerServo.write(lowerServoPos);    
		delay(15);             
	}
  }
}














